// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: ss_msgid.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type S2SLogicMsgId int32

const (
	S2SLogicMsgId_s2s_base_min_msg_id S2SLogicMsgId = 0
	S2SLogicMsgId_s2s_base_max_msg_id S2SLogicMsgId = 100
	//gateway -- game
	S2SLogicMsgId_g2g_kick_role_req_id      S2SLogicMsgId = 401
	S2SLogicMsgId_g2g_kick_role_res_id      S2SLogicMsgId = 402
	S2SLogicMsgId_c2s_tranfer_game_msg_id   S2SLogicMsgId = 403
	S2SLogicMsgId_s2c_tranfer_client_msg_id S2SLogicMsgId = 404
	S2SLogicMsgId_g2g_enter_game_req_id     S2SLogicMsgId = 405
	//game-match
	S2SLogicMsgId_g2m_create_team_req_id           S2SLogicMsgId = 420
	S2SLogicMsgId_m2g_create_team_res_id           S2SLogicMsgId = 421
	S2SLogicMsgId_g2m_invite_team_req_id           S2SLogicMsgId = 422
	S2SLogicMsgId_m2g_invite_team_confirm_req_id   S2SLogicMsgId = 423
	S2SLogicMsgId_g2m_invite_team_confirm_res_id   S2SLogicMsgId = 424
	S2SLogicMsgId_m2g_team_ntf_id                  S2SLogicMsgId = 426
	S2SLogicMsgId_g2m_leave_team_req_id            S2SLogicMsgId = 427
	S2SLogicMsgId_g2m_start_match_req_id           S2SLogicMsgId = 428
	S2SLogicMsgId_g2m_stop_match_req_id            S2SLogicMsgId = 429
	S2SLogicMsgId_m2g_room_confirm_req_id          S2SLogicMsgId = 430
	S2SLogicMsgId_g2m_room_confirm_res_id          S2SLogicMsgId = 431
	S2SLogicMsgId_m2g_restart_match_ntf_id         S2SLogicMsgId = 432
	S2SLogicMsgId_game2match_logic_msg_id          S2SLogicMsgId = 433
	S2SLogicMsgId_match2game_logic_msg_id          S2SLogicMsgId = 434
	S2SLogicMsgId_m2g_room_member_ntf_id           S2SLogicMsgId = 435
	S2SLogicMsgId_m2g_room_ok_ntf_id               S2SLogicMsgId = 436
	S2SLogicMsgId_m2g_tip_ntf_id                   S2SLogicMsgId = 437
	S2SLogicMsgId_m2g_create_scene_req_id          S2SLogicMsgId = 438
	S2SLogicMsgId_g2m_create_scene_res_id          S2SLogicMsgId = 439
	S2SLogicMsgId_g2m_select_master_in_room_req_id S2SLogicMsgId = 440
	S2SLogicMsgId_g2m_lock_master_in_room_req_id   S2SLogicMsgId = 441
	//game -- db
	S2SLogicMsgId_game2db_logic_msg_id        S2SLogicMsgId = 1001
	S2SLogicMsgId_db2game_logic_msg_id        S2SLogicMsgId = 1002
	S2SLogicMsgId_g2d_select_role_data_req_id S2SLogicMsgId = 1003
	S2SLogicMsgId_d2g_select_role_data_res_id S2SLogicMsgId = 1004
	S2SLogicMsgId_g2d_init_role_data_req_id   S2SLogicMsgId = 1005
	S2SLogicMsgId_d2g_init_role_data_res_id   S2SLogicMsgId = 1006
	S2SLogicMsgId_g2d_role_data_save_req_id   S2SLogicMsgId = 1007
	S2SLogicMsgId_d2g_role_data_save_res_id   S2SLogicMsgId = 1008
	//game -- scene
	S2SLogicMsgId_g2s_create_scene_req_id S2SLogicMsgId = 1201
	S2SLogicMsgId_s2g_create_scene_res_id S2SLogicMsgId = 1202
	S2SLogicMsgId_game2scene_logic_msg_id S2SLogicMsgId = 1203
	S2SLogicMsgId_scene2game_logic_msg_id S2SLogicMsgId = 1204
	S2SLogicMsgId_s2g_scene_ok_ntf_id     S2SLogicMsgId = 1205
)

// Enum value maps for S2SLogicMsgId.
var (
	S2SLogicMsgId_name = map[int32]string{
		0:    "s2s_base_min_msg_id",
		100:  "s2s_base_max_msg_id",
		401:  "g2g_kick_role_req_id",
		402:  "g2g_kick_role_res_id",
		403:  "c2s_tranfer_game_msg_id",
		404:  "s2c_tranfer_client_msg_id",
		405:  "g2g_enter_game_req_id",
		420:  "g2m_create_team_req_id",
		421:  "m2g_create_team_res_id",
		422:  "g2m_invite_team_req_id",
		423:  "m2g_invite_team_confirm_req_id",
		424:  "g2m_invite_team_confirm_res_id",
		426:  "m2g_team_ntf_id",
		427:  "g2m_leave_team_req_id",
		428:  "g2m_start_match_req_id",
		429:  "g2m_stop_match_req_id",
		430:  "m2g_room_confirm_req_id",
		431:  "g2m_room_confirm_res_id",
		432:  "m2g_restart_match_ntf_id",
		433:  "game2match_logic_msg_id",
		434:  "match2game_logic_msg_id",
		435:  "m2g_room_member_ntf_id",
		436:  "m2g_room_ok_ntf_id",
		437:  "m2g_tip_ntf_id",
		438:  "m2g_create_scene_req_id",
		439:  "g2m_create_scene_res_id",
		440:  "g2m_select_master_in_room_req_id",
		441:  "g2m_lock_master_in_room_req_id",
		1001: "game2db_logic_msg_id",
		1002: "db2game_logic_msg_id",
		1003: "g2d_select_role_data_req_id",
		1004: "d2g_select_role_data_res_id",
		1005: "g2d_init_role_data_req_id",
		1006: "d2g_init_role_data_res_id",
		1007: "g2d_role_data_save_req_id",
		1008: "d2g_role_data_save_res_id",
		1201: "g2s_create_scene_req_id",
		1202: "s2g_create_scene_res_id",
		1203: "game2scene_logic_msg_id",
		1204: "scene2game_logic_msg_id",
		1205: "s2g_scene_ok_ntf_id",
	}
	S2SLogicMsgId_value = map[string]int32{
		"s2s_base_min_msg_id":              0,
		"s2s_base_max_msg_id":              100,
		"g2g_kick_role_req_id":             401,
		"g2g_kick_role_res_id":             402,
		"c2s_tranfer_game_msg_id":          403,
		"s2c_tranfer_client_msg_id":        404,
		"g2g_enter_game_req_id":            405,
		"g2m_create_team_req_id":           420,
		"m2g_create_team_res_id":           421,
		"g2m_invite_team_req_id":           422,
		"m2g_invite_team_confirm_req_id":   423,
		"g2m_invite_team_confirm_res_id":   424,
		"m2g_team_ntf_id":                  426,
		"g2m_leave_team_req_id":            427,
		"g2m_start_match_req_id":           428,
		"g2m_stop_match_req_id":            429,
		"m2g_room_confirm_req_id":          430,
		"g2m_room_confirm_res_id":          431,
		"m2g_restart_match_ntf_id":         432,
		"game2match_logic_msg_id":          433,
		"match2game_logic_msg_id":          434,
		"m2g_room_member_ntf_id":           435,
		"m2g_room_ok_ntf_id":               436,
		"m2g_tip_ntf_id":                   437,
		"m2g_create_scene_req_id":          438,
		"g2m_create_scene_res_id":          439,
		"g2m_select_master_in_room_req_id": 440,
		"g2m_lock_master_in_room_req_id":   441,
		"game2db_logic_msg_id":             1001,
		"db2game_logic_msg_id":             1002,
		"g2d_select_role_data_req_id":      1003,
		"d2g_select_role_data_res_id":      1004,
		"g2d_init_role_data_req_id":        1005,
		"d2g_init_role_data_res_id":        1006,
		"g2d_role_data_save_req_id":        1007,
		"d2g_role_data_save_res_id":        1008,
		"g2s_create_scene_req_id":          1201,
		"s2g_create_scene_res_id":          1202,
		"game2scene_logic_msg_id":          1203,
		"scene2game_logic_msg_id":          1204,
		"s2g_scene_ok_ntf_id":              1205,
	}
)

func (x S2SLogicMsgId) Enum() *S2SLogicMsgId {
	p := new(S2SLogicMsgId)
	*p = x
	return p
}

func (x S2SLogicMsgId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (S2SLogicMsgId) Descriptor() protoreflect.EnumDescriptor {
	return file_ss_msgid_proto_enumTypes[0].Descriptor()
}

func (S2SLogicMsgId) Type() protoreflect.EnumType {
	return &file_ss_msgid_proto_enumTypes[0]
}

func (x S2SLogicMsgId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use S2SLogicMsgId.Descriptor instead.
func (S2SLogicMsgId) EnumDescriptor() ([]byte, []int) {
	return file_ss_msgid_proto_rawDescGZIP(), []int{0}
}

var File_ss_msgid_proto protoreflect.FileDescriptor

var file_ss_msgid_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x2a, 0xd3, 0x09, 0x0a, 0x0d, 0x53, 0x32, 0x53, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x13, 0x73, 0x32, 0x73, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x10, 0x00, 0x12,
	0x17, 0x0a, 0x13, 0x73, 0x32, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x10, 0x64, 0x12, 0x19, 0x0a, 0x14, 0x67, 0x32, 0x67, 0x5f,
	0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64,
	0x10, 0x91, 0x03, 0x12, 0x19, 0x0a, 0x14, 0x67, 0x32, 0x67, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x10, 0x92, 0x03, 0x12, 0x1c,
	0x0a, 0x17, 0x63, 0x32, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x66, 0x65, 0x72, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x10, 0x93, 0x03, 0x12, 0x1e, 0x0a, 0x19,
	0x73, 0x32, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x10, 0x94, 0x03, 0x12, 0x1a, 0x0a, 0x15,
	0x67, 0x32, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x5f, 0x69, 0x64, 0x10, 0x95, 0x03, 0x12, 0x1b, 0x0a, 0x16, 0x67, 0x32, 0x6d, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x5f,
	0x69, 0x64, 0x10, 0xa4, 0x03, 0x12, 0x1b, 0x0a, 0x16, 0x6d, 0x32, 0x67, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x10,
	0xa5, 0x03, 0x12, 0x1b, 0x0a, 0x16, 0x67, 0x32, 0x6d, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x10, 0xa6, 0x03, 0x12,
	0x23, 0x0a, 0x1e, 0x6d, 0x32, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69,
	0x64, 0x10, 0xa7, 0x03, 0x12, 0x23, 0x0a, 0x1e, 0x67, 0x32, 0x6d, 0x5f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f,
	0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x10, 0xa8, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x6d, 0x32, 0x67,
	0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x10, 0xaa, 0x03, 0x12,
	0x1a, 0x0a, 0x15, 0x67, 0x32, 0x6d, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x10, 0xab, 0x03, 0x12, 0x1b, 0x0a, 0x16, 0x67,
	0x32, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72,
	0x65, 0x71, 0x5f, 0x69, 0x64, 0x10, 0xac, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x67, 0x32, 0x6d, 0x5f,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69,
	0x64, 0x10, 0xad, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x6d, 0x32, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x10,
	0xae, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x67, 0x32, 0x6d, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x10, 0xaf, 0x03,
	0x12, 0x1d, 0x0a, 0x18, 0x6d, 0x32, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x10, 0xb0, 0x03, 0x12,
	0x1c, 0x0a, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x32, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x10, 0xb1, 0x03, 0x12, 0x1c, 0x0a,
	0x17, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x32, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x10, 0xb2, 0x03, 0x12, 0x1b, 0x0a, 0x16, 0x6d,
	0x32, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e,
	0x74, 0x66, 0x5f, 0x69, 0x64, 0x10, 0xb3, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x6d, 0x32, 0x67, 0x5f,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6f, 0x6b, 0x5f, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x10, 0xb4,
	0x03, 0x12, 0x13, 0x0a, 0x0e, 0x6d, 0x32, 0x67, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x6e, 0x74, 0x66,
	0x5f, 0x69, 0x64, 0x10, 0xb5, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x6d, 0x32, 0x67, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69,
	0x64, 0x10, 0xb6, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x67, 0x32, 0x6d, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x10,
	0xb7, 0x03, 0x12, 0x25, 0x0a, 0x20, 0x67, 0x32, 0x6d, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x10, 0xb8, 0x03, 0x12, 0x23, 0x0a, 0x1e, 0x67, 0x32, 0x6d,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x5f,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x10, 0xb9, 0x03, 0x12, 0x19,
	0x0a, 0x14, 0x67, 0x61, 0x6d, 0x65, 0x32, 0x64, 0x62, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x10, 0xe9, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x64, 0x62, 0x32,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69,
	0x64, 0x10, 0xea, 0x07, 0x12, 0x20, 0x0a, 0x1b, 0x67, 0x32, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71,
	0x5f, 0x69, 0x64, 0x10, 0xeb, 0x07, 0x12, 0x20, 0x0a, 0x1b, 0x64, 0x32, 0x67, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72,
	0x65, 0x73, 0x5f, 0x69, 0x64, 0x10, 0xec, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x67, 0x32, 0x64, 0x5f,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72,
	0x65, 0x71, 0x5f, 0x69, 0x64, 0x10, 0xed, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x64, 0x32, 0x67, 0x5f,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72,
	0x65, 0x73, 0x5f, 0x69, 0x64, 0x10, 0xee, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x67, 0x32, 0x64, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x5f, 0x69, 0x64, 0x10, 0xef, 0x07, 0x12, 0x1e, 0x0a, 0x19, 0x64, 0x32, 0x67, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x5f, 0x69, 0x64, 0x10, 0xf0, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x67, 0x32, 0x73, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x5f, 0x69, 0x64, 0x10, 0xb1, 0x09, 0x12, 0x1c, 0x0a, 0x17, 0x73, 0x32, 0x67, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x69,
	0x64, 0x10, 0xb2, 0x09, 0x12, 0x1c, 0x0a, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x32, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x10,
	0xb3, 0x09, 0x12, 0x1c, 0x0a, 0x17, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x32, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x10, 0xb4, 0x09,
	0x12, 0x18, 0x0a, 0x13, 0x73, 0x32, 0x67, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x6f, 0x6b,
	0x5f, 0x6e, 0x74, 0x66, 0x5f, 0x69, 0x64, 0x10, 0xb5, 0x09, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f,
	0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ss_msgid_proto_rawDescOnce sync.Once
	file_ss_msgid_proto_rawDescData = file_ss_msgid_proto_rawDesc
)

func file_ss_msgid_proto_rawDescGZIP() []byte {
	file_ss_msgid_proto_rawDescOnce.Do(func() {
		file_ss_msgid_proto_rawDescData = protoimpl.X.CompressGZIP(file_ss_msgid_proto_rawDescData)
	})
	return file_ss_msgid_proto_rawDescData
}

var file_ss_msgid_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ss_msgid_proto_goTypes = []interface{}{
	(S2SLogicMsgId)(0), // 0: pb.S2SLogicMsgId
}
var file_ss_msgid_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ss_msgid_proto_init() }
func file_ss_msgid_proto_init() {
	if File_ss_msgid_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ss_msgid_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ss_msgid_proto_goTypes,
		DependencyIndexes: file_ss_msgid_proto_depIdxs,
		EnumInfos:         file_ss_msgid_proto_enumTypes,
	}.Build()
	File_ss_msgid_proto = out.File
	file_ss_msgid_proto_rawDesc = nil
	file_ss_msgid_proto_goTypes = nil
	file_ss_msgid_proto_depIdxs = nil
}
