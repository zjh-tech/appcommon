// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: ss_logic.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//gateway -- game
type KickRoleReason int32

const (
	KickRoleReason_onlinerepeatlogin KickRoleReason = 0
	KickRoleReason_heartbeaterror    KickRoleReason = 1
	KickRoleReason_exitgame          KickRoleReason = 2
)

// Enum value maps for KickRoleReason.
var (
	KickRoleReason_name = map[int32]string{
		0: "onlinerepeatlogin",
		1: "heartbeaterror",
		2: "exitgame",
	}
	KickRoleReason_value = map[string]int32{
		"onlinerepeatlogin": 0,
		"heartbeaterror":    1,
		"exitgame":          2,
	}
)

func (x KickRoleReason) Enum() *KickRoleReason {
	p := new(KickRoleReason)
	*p = x
	return p
}

func (x KickRoleReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KickRoleReason) Descriptor() protoreflect.EnumDescriptor {
	return file_ss_logic_proto_enumTypes[0].Descriptor()
}

func (KickRoleReason) Type() protoreflect.EnumType {
	return &file_ss_logic_proto_enumTypes[0]
}

func (x KickRoleReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KickRoleReason.Descriptor instead.
func (KickRoleReason) EnumDescriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{0}
}

type RoleSaveReason int32

const (
	RoleSaveReason_timing        RoleSaveReason = 0
	RoleSaveReason_normaloffline RoleSaveReason = 1
	RoleSaveReason_tick          RoleSaveReason = 2
)

// Enum value maps for RoleSaveReason.
var (
	RoleSaveReason_name = map[int32]string{
		0: "timing",
		1: "normaloffline",
		2: "tick",
	}
	RoleSaveReason_value = map[string]int32{
		"timing":        0,
		"normaloffline": 1,
		"tick":          2,
	}
)

func (x RoleSaveReason) Enum() *RoleSaveReason {
	p := new(RoleSaveReason)
	*p = x
	return p
}

func (x RoleSaveReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoleSaveReason) Descriptor() protoreflect.EnumDescriptor {
	return file_ss_logic_proto_enumTypes[1].Descriptor()
}

func (RoleSaveReason) Type() protoreflect.EnumType {
	return &file_ss_logic_proto_enumTypes[1]
}

func (x RoleSaveReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoleSaveReason.Descriptor instead.
func (RoleSaveReason) EnumDescriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{1}
}

type G2GKickRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account         string         `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Accountid       uint64         `protobuf:"varint,2,opt,name=accountid,proto3" json:"accountid,omitempty"`
	Roleid          uint64         `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Rolename        string         `protobuf:"bytes,4,opt,name=rolename,proto3" json:"rolename,omitempty"`
	Reason          KickRoleReason `protobuf:"varint,5,opt,name=reason,proto3,enum=pb.KickRoleReason" json:"reason,omitempty"`
	Clientsessionid uint64         `protobuf:"varint,6,opt,name=clientsessionid,proto3" json:"clientsessionid,omitempty"`
	Reasonmessage   string         `protobuf:"bytes,7,opt,name=reasonmessage,proto3" json:"reasonmessage,omitempty"`
}

func (x *G2GKickRoleReq) Reset() {
	*x = G2GKickRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2GKickRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2GKickRoleReq) ProtoMessage() {}

func (x *G2GKickRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2GKickRoleReq.ProtoReflect.Descriptor instead.
func (*G2GKickRoleReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{0}
}

func (x *G2GKickRoleReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *G2GKickRoleReq) GetAccountid() uint64 {
	if x != nil {
		return x.Accountid
	}
	return 0
}

func (x *G2GKickRoleReq) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *G2GKickRoleReq) GetRolename() string {
	if x != nil {
		return x.Rolename
	}
	return ""
}

func (x *G2GKickRoleReq) GetReason() KickRoleReason {
	if x != nil {
		return x.Reason
	}
	return KickRoleReason_onlinerepeatlogin
}

func (x *G2GKickRoleReq) GetClientsessionid() uint64 {
	if x != nil {
		return x.Clientsessionid
	}
	return 0
}

func (x *G2GKickRoleReq) GetReasonmessage() string {
	if x != nil {
		return x.Reasonmessage
	}
	return ""
}

type G2GKickRoleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Accountid uint64 `protobuf:"varint,2,opt,name=accountid,proto3" json:"accountid,omitempty"`
	Roleid    uint64 `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Rolename  string `protobuf:"bytes,4,opt,name=rolename,proto3" json:"rolename,omitempty"`
	Errorcode uint32 `protobuf:"varint,5,opt,name=errorcode,proto3" json:"errorcode,omitempty"`
}

func (x *G2GKickRoleRes) Reset() {
	*x = G2GKickRoleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2GKickRoleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2GKickRoleRes) ProtoMessage() {}

func (x *G2GKickRoleRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2GKickRoleRes.ProtoReflect.Descriptor instead.
func (*G2GKickRoleRes) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{1}
}

func (x *G2GKickRoleRes) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *G2GKickRoleRes) GetAccountid() uint64 {
	if x != nil {
		return x.Accountid
	}
	return 0
}

func (x *G2GKickRoleRes) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *G2GKickRoleRes) GetRolename() string {
	if x != nil {
		return x.Rolename
	}
	return ""
}

func (x *G2GKickRoleRes) GetErrorcode() uint32 {
	if x != nil {
		return x.Errorcode
	}
	return 0
}

type G2GEnterGameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account         string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Accountid       uint64 `protobuf:"varint,2,opt,name=accountid,proto3" json:"accountid,omitempty"`
	Roleid          uint64 `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Rolename        string `protobuf:"bytes,4,opt,name=rolename,proto3" json:"rolename,omitempty"`
	Clientsessionid uint64 `protobuf:"varint,5,opt,name=clientsessionid,proto3" json:"clientsessionid,omitempty"`
}

func (x *G2GEnterGameReq) Reset() {
	*x = G2GEnterGameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2GEnterGameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2GEnterGameReq) ProtoMessage() {}

func (x *G2GEnterGameReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2GEnterGameReq.ProtoReflect.Descriptor instead.
func (*G2GEnterGameReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{2}
}

func (x *G2GEnterGameReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *G2GEnterGameReq) GetAccountid() uint64 {
	if x != nil {
		return x.Accountid
	}
	return 0
}

func (x *G2GEnterGameReq) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *G2GEnterGameReq) GetRolename() string {
	if x != nil {
		return x.Rolename
	}
	return ""
}

func (x *G2GEnterGameReq) GetClientsessionid() uint64 {
	if x != nil {
		return x.Clientsessionid
	}
	return 0
}

type C2STranferGameMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgid  uint32 `protobuf:"varint,1,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Datas  []byte `protobuf:"bytes,2,opt,name=datas,proto3" json:"datas,omitempty"`
	Roleid uint64 `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
}

func (x *C2STranferGameMsg) Reset() {
	*x = C2STranferGameMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2STranferGameMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2STranferGameMsg) ProtoMessage() {}

func (x *C2STranferGameMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2STranferGameMsg.ProtoReflect.Descriptor instead.
func (*C2STranferGameMsg) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{3}
}

func (x *C2STranferGameMsg) GetMsgid() uint32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *C2STranferGameMsg) GetDatas() []byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *C2STranferGameMsg) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

type S2CTranferClientMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgid  uint32 `protobuf:"varint,1,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Datas  []byte `protobuf:"bytes,2,opt,name=datas,proto3" json:"datas,omitempty"`
	Roleid uint64 `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
}

func (x *S2CTranferClientMsg) Reset() {
	*x = S2CTranferClientMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2CTranferClientMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2CTranferClientMsg) ProtoMessage() {}

func (x *S2CTranferClientMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2CTranferClientMsg.ProtoReflect.Descriptor instead.
func (*S2CTranferClientMsg) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{4}
}

func (x *S2CTranferClientMsg) GetMsgid() uint32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *S2CTranferClientMsg) GetDatas() []byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *S2CTranferClientMsg) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

//game -- db
type Game2DbLogicMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgid        uint32 `protobuf:"varint,1,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Datas        []byte `protobuf:"bytes,2,opt,name=datas,proto3" json:"datas,omitempty"`
	Gameserverid uint64 `protobuf:"varint,3,opt,name=gameserverid,proto3" json:"gameserverid,omitempty"`
	Roleid       uint64 `protobuf:"varint,4,opt,name=roleid,proto3" json:"roleid,omitempty"`
}

func (x *Game2DbLogicMsg) Reset() {
	*x = Game2DbLogicMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game2DbLogicMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game2DbLogicMsg) ProtoMessage() {}

func (x *Game2DbLogicMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game2DbLogicMsg.ProtoReflect.Descriptor instead.
func (*Game2DbLogicMsg) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{5}
}

func (x *Game2DbLogicMsg) GetMsgid() uint32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *Game2DbLogicMsg) GetDatas() []byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *Game2DbLogicMsg) GetGameserverid() uint64 {
	if x != nil {
		return x.Gameserverid
	}
	return 0
}

func (x *Game2DbLogicMsg) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

type Db2GameLogicMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgid  uint32 `protobuf:"varint,1,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Datas  []byte `protobuf:"bytes,2,opt,name=datas,proto3" json:"datas,omitempty"`
	Roleid uint64 `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
}

func (x *Db2GameLogicMsg) Reset() {
	*x = Db2GameLogicMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Db2GameLogicMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Db2GameLogicMsg) ProtoMessage() {}

func (x *Db2GameLogicMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Db2GameLogicMsg.ProtoReflect.Descriptor instead.
func (*Db2GameLogicMsg) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{6}
}

func (x *Db2GameLogicMsg) GetMsgid() uint32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *Db2GameLogicMsg) GetDatas() []byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

func (x *Db2GameLogicMsg) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

type G2DSelectRoleDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Accountid uint64 `protobuf:"varint,2,opt,name=accountid,proto3" json:"accountid,omitempty"`
	Roleid    uint64 `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Rolename  string `protobuf:"bytes,4,opt,name=rolename,proto3" json:"rolename,omitempty"`
}

func (x *G2DSelectRoleDataReq) Reset() {
	*x = G2DSelectRoleDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2DSelectRoleDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2DSelectRoleDataReq) ProtoMessage() {}

func (x *G2DSelectRoleDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2DSelectRoleDataReq.ProtoReflect.Descriptor instead.
func (*G2DSelectRoleDataReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{7}
}

func (x *G2DSelectRoleDataReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *G2DSelectRoleDataReq) GetAccountid() uint64 {
	if x != nil {
		return x.Accountid
	}
	return 0
}

func (x *G2DSelectRoleDataReq) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *G2DSelectRoleDataReq) GetRolename() string {
	if x != nil {
		return x.Rolename
	}
	return ""
}

type D2GSelectRoleDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Initflag  bool          `protobuf:"varint,1,opt,name=initflag,proto3" json:"initflag,omitempty"`
	Roledatas *RoleSaveData `protobuf:"bytes,2,opt,name=roledatas,proto3" json:"roledatas,omitempty"`
}

func (x *D2GSelectRoleDataRes) Reset() {
	*x = D2GSelectRoleDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *D2GSelectRoleDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*D2GSelectRoleDataRes) ProtoMessage() {}

func (x *D2GSelectRoleDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use D2GSelectRoleDataRes.ProtoReflect.Descriptor instead.
func (*D2GSelectRoleDataRes) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{8}
}

func (x *D2GSelectRoleDataRes) GetInitflag() bool {
	if x != nil {
		return x.Initflag
	}
	return false
}

func (x *D2GSelectRoleDataRes) GetRoledatas() *RoleSaveData {
	if x != nil {
		return x.Roledatas
	}
	return nil
}

type G2DInitRoleDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roledatas *RoleSaveData `protobuf:"bytes,1,opt,name=roledatas,proto3" json:"roledatas,omitempty"`
}

func (x *G2DInitRoleDataReq) Reset() {
	*x = G2DInitRoleDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2DInitRoleDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2DInitRoleDataReq) ProtoMessage() {}

func (x *G2DInitRoleDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2DInitRoleDataReq.ProtoReflect.Descriptor instead.
func (*G2DInitRoleDataReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{9}
}

func (x *G2DInitRoleDataReq) GetRoledatas() *RoleSaveData {
	if x != nil {
		return x.Roledatas
	}
	return nil
}

type D2GInitRoleDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roleid   uint64 `protobuf:"varint,1,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Rolename string `protobuf:"bytes,2,opt,name=rolename,proto3" json:"rolename,omitempty"`
}

func (x *D2GInitRoleDataRes) Reset() {
	*x = D2GInitRoleDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *D2GInitRoleDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*D2GInitRoleDataRes) ProtoMessage() {}

func (x *D2GInitRoleDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use D2GInitRoleDataRes.ProtoReflect.Descriptor instead.
func (*D2GInitRoleDataRes) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{10}
}

func (x *D2GInitRoleDataRes) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *D2GInitRoleDataRes) GetRolename() string {
	if x != nil {
		return x.Rolename
	}
	return ""
}

type RoleSaveData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account     string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Accountid   uint64 `protobuf:"varint,2,opt,name=accountid,proto3" json:"accountid,omitempty"`
	Roleid      uint64 `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Rolename    string `protobuf:"bytes,4,opt,name=rolename,proto3" json:"rolename,omitempty"`
	Level       uint32 `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Bagdatas    []byte `protobuf:"bytes,6,opt,name=bagdatas,proto3" json:"bagdatas,omitempty"`
	Masterdatas []byte `protobuf:"bytes,7,opt,name=masterdatas,proto3" json:"masterdatas,omitempty"`
}

func (x *RoleSaveData) Reset() {
	*x = RoleSaveData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSaveData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSaveData) ProtoMessage() {}

func (x *RoleSaveData) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSaveData.ProtoReflect.Descriptor instead.
func (*RoleSaveData) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{11}
}

func (x *RoleSaveData) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *RoleSaveData) GetAccountid() uint64 {
	if x != nil {
		return x.Accountid
	}
	return 0
}

func (x *RoleSaveData) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *RoleSaveData) GetRolename() string {
	if x != nil {
		return x.Rolename
	}
	return ""
}

func (x *RoleSaveData) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RoleSaveData) GetBagdatas() []byte {
	if x != nil {
		return x.Bagdatas
	}
	return nil
}

func (x *RoleSaveData) GetMasterdatas() []byte {
	if x != nil {
		return x.Masterdatas
	}
	return nil
}

type G2DRoleDataSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason          RoleSaveReason `protobuf:"varint,1,opt,name=reason,proto3,enum=pb.RoleSaveReason" json:"reason,omitempty"`
	Gatewayserverid uint64         `protobuf:"varint,2,opt,name=gatewayserverid,proto3" json:"gatewayserverid,omitempty"`
	Needresflag     bool           `protobuf:"varint,3,opt,name=needresflag,proto3" json:"needresflag,omitempty"`
	Roledatas       *RoleSaveData  `protobuf:"bytes,4,opt,name=roledatas,proto3" json:"roledatas,omitempty"`
}

func (x *G2DRoleDataSaveReq) Reset() {
	*x = G2DRoleDataSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2DRoleDataSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2DRoleDataSaveReq) ProtoMessage() {}

func (x *G2DRoleDataSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2DRoleDataSaveReq.ProtoReflect.Descriptor instead.
func (*G2DRoleDataSaveReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{12}
}

func (x *G2DRoleDataSaveReq) GetReason() RoleSaveReason {
	if x != nil {
		return x.Reason
	}
	return RoleSaveReason_timing
}

func (x *G2DRoleDataSaveReq) GetGatewayserverid() uint64 {
	if x != nil {
		return x.Gatewayserverid
	}
	return 0
}

func (x *G2DRoleDataSaveReq) GetNeedresflag() bool {
	if x != nil {
		return x.Needresflag
	}
	return false
}

func (x *G2DRoleDataSaveReq) GetRoledatas() *RoleSaveData {
	if x != nil {
		return x.Roledatas
	}
	return nil
}

type D2GRoleDataSaveRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason          RoleSaveReason `protobuf:"varint,1,opt,name=reason,proto3,enum=pb.RoleSaveReason" json:"reason,omitempty"`
	Gatewayserverid uint64         `protobuf:"varint,2,opt,name=gatewayserverid,proto3" json:"gatewayserverid,omitempty"`
	Account         string         `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Accountid       uint64         `protobuf:"varint,4,opt,name=accountid,proto3" json:"accountid,omitempty"`
	Roleid          uint64         `protobuf:"varint,5,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Rolename        string         `protobuf:"bytes,6,opt,name=rolename,proto3" json:"rolename,omitempty"`
}

func (x *D2GRoleDataSaveRes) Reset() {
	*x = D2GRoleDataSaveRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *D2GRoleDataSaveRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*D2GRoleDataSaveRes) ProtoMessage() {}

func (x *D2GRoleDataSaveRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use D2GRoleDataSaveRes.ProtoReflect.Descriptor instead.
func (*D2GRoleDataSaveRes) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{13}
}

func (x *D2GRoleDataSaveRes) GetReason() RoleSaveReason {
	if x != nil {
		return x.Reason
	}
	return RoleSaveReason_timing
}

func (x *D2GRoleDataSaveRes) GetGatewayserverid() uint64 {
	if x != nil {
		return x.Gatewayserverid
	}
	return 0
}

func (x *D2GRoleDataSaveRes) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *D2GRoleDataSaveRes) GetAccountid() uint64 {
	if x != nil {
		return x.Accountid
	}
	return 0
}

func (x *D2GRoleDataSaveRes) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *D2GRoleDataSaveRes) GetRolename() string {
	if x != nil {
		return x.Rolename
	}
	return ""
}

//team-match
//创建房间
type G2MCreateTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode     MatchMode `protobuf:"varint,1,opt,name=mode,proto3,enum=pb.MatchMode" json:"mode,omitempty"`
	RoleId   uint64    `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleName string    `protobuf:"bytes,3,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *G2MCreateTeamReq) Reset() {
	*x = G2MCreateTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2MCreateTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2MCreateTeamReq) ProtoMessage() {}

func (x *G2MCreateTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2MCreateTeamReq.ProtoReflect.Descriptor instead.
func (*G2MCreateTeamReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{14}
}

func (x *G2MCreateTeamReq) GetMode() MatchMode {
	if x != nil {
		return x.Mode
	}
	return MatchMode_normal_match
}

func (x *G2MCreateTeamReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *G2MCreateTeamReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type M2GCreateTeamRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teaminfo *TeamInfo `protobuf:"bytes,1,opt,name=teaminfo,proto3" json:"teaminfo,omitempty"`
}

func (x *M2GCreateTeamRes) Reset() {
	*x = M2GCreateTeamRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M2GCreateTeamRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M2GCreateTeamRes) ProtoMessage() {}

func (x *M2GCreateTeamRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M2GCreateTeamRes.ProtoReflect.Descriptor instead.
func (*M2GCreateTeamRes) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{15}
}

func (x *M2GCreateTeamRes) GetTeaminfo() *TeamInfo {
	if x != nil {
		return x.Teaminfo
	}
	return nil
}

//邀请好友入队
type G2MInviteTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode           MatchMode `protobuf:"varint,1,opt,name=mode,proto3,enum=pb.MatchMode" json:"mode,omitempty"`
	Teamid         uint64    `protobuf:"varint,2,opt,name=teamid,proto3" json:"teamid,omitempty"`
	Inviteroleid   uint64    `protobuf:"varint,3,opt,name=inviteroleid,proto3" json:"inviteroleid,omitempty"`
	Inviterolename string    `protobuf:"bytes,4,opt,name=inviterolename,proto3" json:"inviterolename,omitempty"`
}

func (x *G2MInviteTeamReq) Reset() {
	*x = G2MInviteTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2MInviteTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2MInviteTeamReq) ProtoMessage() {}

func (x *G2MInviteTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2MInviteTeamReq.ProtoReflect.Descriptor instead.
func (*G2MInviteTeamReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{16}
}

func (x *G2MInviteTeamReq) GetMode() MatchMode {
	if x != nil {
		return x.Mode
	}
	return MatchMode_normal_match
}

func (x *G2MInviteTeamReq) GetTeamid() uint64 {
	if x != nil {
		return x.Teamid
	}
	return 0
}

func (x *G2MInviteTeamReq) GetInviteroleid() uint64 {
	if x != nil {
		return x.Inviteroleid
	}
	return 0
}

func (x *G2MInviteTeamReq) GetInviterolename() string {
	if x != nil {
		return x.Inviterolename
	}
	return ""
}

//邀请好友入队确认请求
type M2GInviteTeamConfirmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode           MatchMode `protobuf:"varint,1,opt,name=mode,proto3,enum=pb.MatchMode" json:"mode,omitempty"`
	Teamid         uint64    `protobuf:"varint,2,opt,name=teamid,proto3" json:"teamid,omitempty"`
	Inviteroleid   uint64    `protobuf:"varint,3,opt,name=inviteroleid,proto3" json:"inviteroleid,omitempty"`
	Inviterolename string    `protobuf:"bytes,4,opt,name=inviterolename,proto3" json:"inviterolename,omitempty"`
	RoleId         uint64    `protobuf:"varint,5,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *M2GInviteTeamConfirmReq) Reset() {
	*x = M2GInviteTeamConfirmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M2GInviteTeamConfirmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M2GInviteTeamConfirmReq) ProtoMessage() {}

func (x *M2GInviteTeamConfirmReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M2GInviteTeamConfirmReq.ProtoReflect.Descriptor instead.
func (*M2GInviteTeamConfirmReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{17}
}

func (x *M2GInviteTeamConfirmReq) GetMode() MatchMode {
	if x != nil {
		return x.Mode
	}
	return MatchMode_normal_match
}

func (x *M2GInviteTeamConfirmReq) GetTeamid() uint64 {
	if x != nil {
		return x.Teamid
	}
	return 0
}

func (x *M2GInviteTeamConfirmReq) GetInviteroleid() uint64 {
	if x != nil {
		return x.Inviteroleid
	}
	return 0
}

func (x *M2GInviteTeamConfirmReq) GetInviterolename() string {
	if x != nil {
		return x.Inviterolename
	}
	return ""
}

func (x *M2GInviteTeamConfirmReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

//邀请好友入队确认返回
type G2MInviteTeamConfirmRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode           MatchMode `protobuf:"varint,1,opt,name=mode,proto3,enum=pb.MatchMode" json:"mode,omitempty"`
	Teamid         uint64    `protobuf:"varint,2,opt,name=teamid,proto3" json:"teamid,omitempty"`
	Inviteroleid   uint64    `protobuf:"varint,3,opt,name=inviteroleid,proto3" json:"inviteroleid,omitempty"`
	Inviterolename string    `protobuf:"bytes,4,opt,name=inviterolename,proto3" json:"inviterolename,omitempty"`
	Roleid         uint64    `protobuf:"varint,5,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Isagree        bool      `protobuf:"varint,6,opt,name=isagree,proto3" json:"isagree,omitempty"`
}

func (x *G2MInviteTeamConfirmRes) Reset() {
	*x = G2MInviteTeamConfirmRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2MInviteTeamConfirmRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2MInviteTeamConfirmRes) ProtoMessage() {}

func (x *G2MInviteTeamConfirmRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2MInviteTeamConfirmRes.ProtoReflect.Descriptor instead.
func (*G2MInviteTeamConfirmRes) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{18}
}

func (x *G2MInviteTeamConfirmRes) GetMode() MatchMode {
	if x != nil {
		return x.Mode
	}
	return MatchMode_normal_match
}

func (x *G2MInviteTeamConfirmRes) GetTeamid() uint64 {
	if x != nil {
		return x.Teamid
	}
	return 0
}

func (x *G2MInviteTeamConfirmRes) GetInviteroleid() uint64 {
	if x != nil {
		return x.Inviteroleid
	}
	return 0
}

func (x *G2MInviteTeamConfirmRes) GetInviterolename() string {
	if x != nil {
		return x.Inviterolename
	}
	return ""
}

func (x *G2MInviteTeamConfirmRes) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *G2MInviteTeamConfirmRes) GetIsagree() bool {
	if x != nil {
		return x.Isagree
	}
	return false
}

//被邀请人不同意入队
type M2GInviteTeamFailRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode           MatchMode `protobuf:"varint,1,opt,name=mode,proto3,enum=pb.MatchMode" json:"mode,omitempty"`
	Teamid         uint64    `protobuf:"varint,2,opt,name=teamid,proto3" json:"teamid,omitempty"`
	Inviteroleid   uint64    `protobuf:"varint,3,opt,name=inviteroleid,proto3" json:"inviteroleid,omitempty"`
	Inviterolename string    `protobuf:"bytes,4,opt,name=inviterolename,proto3" json:"inviterolename,omitempty"`
	RoleId         uint64    `protobuf:"varint,5,opt,name=roleId,proto3" json:"roleId,omitempty"`
	Isagree        bool      `protobuf:"varint,6,opt,name=isagree,proto3" json:"isagree,omitempty"`
	Reason         string    `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *M2GInviteTeamFailRes) Reset() {
	*x = M2GInviteTeamFailRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M2GInviteTeamFailRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M2GInviteTeamFailRes) ProtoMessage() {}

func (x *M2GInviteTeamFailRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M2GInviteTeamFailRes.ProtoReflect.Descriptor instead.
func (*M2GInviteTeamFailRes) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{19}
}

func (x *M2GInviteTeamFailRes) GetMode() MatchMode {
	if x != nil {
		return x.Mode
	}
	return MatchMode_normal_match
}

func (x *M2GInviteTeamFailRes) GetTeamid() uint64 {
	if x != nil {
		return x.Teamid
	}
	return 0
}

func (x *M2GInviteTeamFailRes) GetInviteroleid() uint64 {
	if x != nil {
		return x.Inviteroleid
	}
	return 0
}

func (x *M2GInviteTeamFailRes) GetInviterolename() string {
	if x != nil {
		return x.Inviterolename
	}
	return ""
}

func (x *M2GInviteTeamFailRes) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *M2GInviteTeamFailRes) GetIsagree() bool {
	if x != nil {
		return x.Isagree
	}
	return false
}

func (x *M2GInviteTeamFailRes) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

//被邀请人同意入队
type M2GTeamNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teaminfo *TeamInfo `protobuf:"bytes,1,opt,name=teaminfo,proto3" json:"teaminfo,omitempty"`
}

func (x *M2GTeamNtf) Reset() {
	*x = M2GTeamNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M2GTeamNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M2GTeamNtf) ProtoMessage() {}

func (x *M2GTeamNtf) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M2GTeamNtf.ProtoReflect.Descriptor instead.
func (*M2GTeamNtf) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{20}
}

func (x *M2GTeamNtf) GetTeaminfo() *TeamInfo {
	if x != nil {
		return x.Teaminfo
	}
	return nil
}

//退出队伍-返回team_ntf
type G2MLeaveTeamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode   MatchMode `protobuf:"varint,1,opt,name=mode,proto3,enum=pb.MatchMode" json:"mode,omitempty"`
	Teamid uint64    `protobuf:"varint,2,opt,name=teamid,proto3" json:"teamid,omitempty"`
	Roleid uint64    `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
}

func (x *G2MLeaveTeamReq) Reset() {
	*x = G2MLeaveTeamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2MLeaveTeamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2MLeaveTeamReq) ProtoMessage() {}

func (x *G2MLeaveTeamReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2MLeaveTeamReq.ProtoReflect.Descriptor instead.
func (*G2MLeaveTeamReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{21}
}

func (x *G2MLeaveTeamReq) GetMode() MatchMode {
	if x != nil {
		return x.Mode
	}
	return MatchMode_normal_match
}

func (x *G2MLeaveTeamReq) GetTeamid() uint64 {
	if x != nil {
		return x.Teamid
	}
	return 0
}

func (x *G2MLeaveTeamReq) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

//开始匹配
type G2MStartMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode   MatchMode `protobuf:"varint,1,opt,name=mode,proto3,enum=pb.MatchMode" json:"mode,omitempty"`
	Teamid uint64    `protobuf:"varint,2,opt,name=teamid,proto3" json:"teamid,omitempty"`
}

func (x *G2MStartMatchReq) Reset() {
	*x = G2MStartMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2MStartMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2MStartMatchReq) ProtoMessage() {}

func (x *G2MStartMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2MStartMatchReq.ProtoReflect.Descriptor instead.
func (*G2MStartMatchReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{22}
}

func (x *G2MStartMatchReq) GetMode() MatchMode {
	if x != nil {
		return x.Mode
	}
	return MatchMode_normal_match
}

func (x *G2MStartMatchReq) GetTeamid() uint64 {
	if x != nil {
		return x.Teamid
	}
	return 0
}

//取消匹配
type G2MStopMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode   MatchMode `protobuf:"varint,1,opt,name=mode,proto3,enum=pb.MatchMode" json:"mode,omitempty"`
	Teamid uint64    `protobuf:"varint,2,opt,name=teamid,proto3" json:"teamid,omitempty"`
}

func (x *G2MStopMatchReq) Reset() {
	*x = G2MStopMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2MStopMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2MStopMatchReq) ProtoMessage() {}

func (x *G2MStopMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2MStopMatchReq.ProtoReflect.Descriptor instead.
func (*G2MStopMatchReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{23}
}

func (x *G2MStopMatchReq) GetMode() MatchMode {
	if x != nil {
		return x.Mode
	}
	return MatchMode_normal_match
}

func (x *G2MStopMatchReq) GetTeamid() uint64 {
	if x != nil {
		return x.Teamid
	}
	return 0
}

//匹配到房间确认请求
type M2GRoomConfirmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roomid      uint64        `protobuf:"varint,1,opt,name=roomid,proto3" json:"roomid,omitempty"`
	Waitmembers []*RoomMember `protobuf:"bytes,2,rep,name=waitmembers,proto3" json:"waitmembers,omitempty"`
}

func (x *M2GRoomConfirmReq) Reset() {
	*x = M2GRoomConfirmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M2GRoomConfirmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M2GRoomConfirmReq) ProtoMessage() {}

func (x *M2GRoomConfirmReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M2GRoomConfirmReq.ProtoReflect.Descriptor instead.
func (*M2GRoomConfirmReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{24}
}

func (x *M2GRoomConfirmReq) GetRoomid() uint64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

func (x *M2GRoomConfirmReq) GetWaitmembers() []*RoomMember {
	if x != nil {
		return x.Waitmembers
	}
	return nil
}

//匹配到房间确认返回
type G2MRoomConfirmRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roomid         uint64 `protobuf:"varint,1,opt,name=roomid,proto3" json:"roomid,omitempty"`
	Isagree        bool   `protobuf:"varint,2,opt,name=isagree,proto3" json:"isagree,omitempty"`
	Rolename       string `protobuf:"bytes,3,opt,name=rolename,proto3" json:"rolename,omitempty"`
	Battlemasterid uint32 `protobuf:"varint,4,opt,name=battlemasterid,proto3" json:"battlemasterid,omitempty"`
}

func (x *G2MRoomConfirmRes) Reset() {
	*x = G2MRoomConfirmRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2MRoomConfirmRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2MRoomConfirmRes) ProtoMessage() {}

func (x *G2MRoomConfirmRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2MRoomConfirmRes.ProtoReflect.Descriptor instead.
func (*G2MRoomConfirmRes) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{25}
}

func (x *G2MRoomConfirmRes) GetRoomid() uint64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

func (x *G2MRoomConfirmRes) GetIsagree() bool {
	if x != nil {
		return x.Isagree
	}
	return false
}

func (x *G2MRoomConfirmRes) GetRolename() string {
	if x != nil {
		return x.Rolename
	}
	return ""
}

func (x *G2MRoomConfirmRes) GetBattlemasterid() uint32 {
	if x != nil {
		return x.Battlemasterid
	}
	return 0
}

type M2GRoomMemberNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*RoomMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"` //agree in room members
	Roomid  uint64        `protobuf:"varint,2,opt,name=roomid,proto3" json:"roomid,omitempty"`
}

func (x *M2GRoomMemberNtf) Reset() {
	*x = M2GRoomMemberNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M2GRoomMemberNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M2GRoomMemberNtf) ProtoMessage() {}

func (x *M2GRoomMemberNtf) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M2GRoomMemberNtf.ProtoReflect.Descriptor instead.
func (*M2GRoomMemberNtf) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{26}
}

func (x *M2GRoomMemberNtf) GetMembers() []*RoomMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *M2GRoomMemberNtf) GetRoomid() uint64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

//不接受匹配,重新匹配
type M2GRestartMatchNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teaminfo *TeamInfo `protobuf:"bytes,1,opt,name=teaminfo,proto3" json:"teaminfo,omitempty"`
}

func (x *M2GRestartMatchNtf) Reset() {
	*x = M2GRestartMatchNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M2GRestartMatchNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M2GRestartMatchNtf) ProtoMessage() {}

func (x *M2GRestartMatchNtf) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M2GRestartMatchNtf.ProtoReflect.Descriptor instead.
func (*M2GRestartMatchNtf) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{27}
}

func (x *M2GRestartMatchNtf) GetTeaminfo() *TeamInfo {
	if x != nil {
		return x.Teaminfo
	}
	return nil
}

type M2GCreateSceneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roomid        uint64        `protobuf:"varint,1,opt,name=roomid,proto3" json:"roomid,omitempty"`
	Members       []*RoomMember `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	MatchServerid uint64        `protobuf:"varint,3,opt,name=match_serverid,json=matchServerid,proto3" json:"match_serverid,omitempty"`
}

func (x *M2GCreateSceneReq) Reset() {
	*x = M2GCreateSceneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M2GCreateSceneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M2GCreateSceneReq) ProtoMessage() {}

func (x *M2GCreateSceneReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M2GCreateSceneReq.ProtoReflect.Descriptor instead.
func (*M2GCreateSceneReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{28}
}

func (x *M2GCreateSceneReq) GetRoomid() uint64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

func (x *M2GCreateSceneReq) GetMembers() []*RoomMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *M2GCreateSceneReq) GetMatchServerid() uint64 {
	if x != nil {
		return x.MatchServerid
	}
	return 0
}

type M2GRoomOkNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roomid uint64 `protobuf:"varint,1,opt,name=roomid,proto3" json:"roomid,omitempty"`
}

func (x *M2GRoomOkNtf) Reset() {
	*x = M2GRoomOkNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M2GRoomOkNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M2GRoomOkNtf) ProtoMessage() {}

func (x *M2GRoomOkNtf) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M2GRoomOkNtf.ProtoReflect.Descriptor instead.
func (*M2GRoomOkNtf) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{29}
}

func (x *M2GRoomOkNtf) GetRoomid() uint64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

type G2MCreateSceneRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roomid uint64 `protobuf:"varint,1,opt,name=roomid,proto3" json:"roomid,omitempty"`
}

func (x *G2MCreateSceneRes) Reset() {
	*x = G2MCreateSceneRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2MCreateSceneRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2MCreateSceneRes) ProtoMessage() {}

func (x *G2MCreateSceneRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2MCreateSceneRes.ProtoReflect.Descriptor instead.
func (*G2MCreateSceneRes) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{30}
}

func (x *G2MCreateSceneRes) GetRoomid() uint64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

type Game2MatchLogicMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode         MatchMode `protobuf:"varint,1,opt,name=mode,proto3,enum=pb.MatchMode" json:"mode,omitempty"`
	Teamid       uint64    `protobuf:"varint,2,opt,name=teamid,proto3" json:"teamid,omitempty"`
	Roleid       uint64    `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Gameserverid uint64    `protobuf:"varint,4,opt,name=gameserverid,proto3" json:"gameserverid,omitempty"`
	Msgid        uint32    `protobuf:"varint,5,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Datas        []byte    `protobuf:"bytes,6,opt,name=datas,proto3" json:"datas,omitempty"`
}

func (x *Game2MatchLogicMsg) Reset() {
	*x = Game2MatchLogicMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game2MatchLogicMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game2MatchLogicMsg) ProtoMessage() {}

func (x *Game2MatchLogicMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game2MatchLogicMsg.ProtoReflect.Descriptor instead.
func (*Game2MatchLogicMsg) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{31}
}

func (x *Game2MatchLogicMsg) GetMode() MatchMode {
	if x != nil {
		return x.Mode
	}
	return MatchMode_normal_match
}

func (x *Game2MatchLogicMsg) GetTeamid() uint64 {
	if x != nil {
		return x.Teamid
	}
	return 0
}

func (x *Game2MatchLogicMsg) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *Game2MatchLogicMsg) GetGameserverid() uint64 {
	if x != nil {
		return x.Gameserverid
	}
	return 0
}

func (x *Game2MatchLogicMsg) GetMsgid() uint32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *Game2MatchLogicMsg) GetDatas() []byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

type Match2GameLogicMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode   MatchMode `protobuf:"varint,1,opt,name=mode,proto3,enum=pb.MatchMode" json:"mode,omitempty"`
	Teamid uint64    `protobuf:"varint,2,opt,name=teamid,proto3" json:"teamid,omitempty"`
	Roleid uint64    `protobuf:"varint,3,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Msgid  uint32    `protobuf:"varint,4,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Datas  []byte    `protobuf:"bytes,5,opt,name=datas,proto3" json:"datas,omitempty"`
}

func (x *Match2GameLogicMsg) Reset() {
	*x = Match2GameLogicMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match2GameLogicMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match2GameLogicMsg) ProtoMessage() {}

func (x *Match2GameLogicMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match2GameLogicMsg.ProtoReflect.Descriptor instead.
func (*Match2GameLogicMsg) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{32}
}

func (x *Match2GameLogicMsg) GetMode() MatchMode {
	if x != nil {
		return x.Mode
	}
	return MatchMode_normal_match
}

func (x *Match2GameLogicMsg) GetTeamid() uint64 {
	if x != nil {
		return x.Teamid
	}
	return 0
}

func (x *Match2GameLogicMsg) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *Match2GameLogicMsg) GetMsgid() uint32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *Match2GameLogicMsg) GetDatas() []byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

type M2GTipNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errorcode uint32   `protobuf:"varint,1,opt,name=errorcode,proto3" json:"errorcode,omitempty"`
	Paras     []string `protobuf:"bytes,2,rep,name=paras,proto3" json:"paras,omitempty"`
}

func (x *M2GTipNtf) Reset() {
	*x = M2GTipNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M2GTipNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M2GTipNtf) ProtoMessage() {}

func (x *M2GTipNtf) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M2GTipNtf.ProtoReflect.Descriptor instead.
func (*M2GTipNtf) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{33}
}

func (x *M2GTipNtf) GetErrorcode() uint32 {
	if x != nil {
		return x.Errorcode
	}
	return 0
}

func (x *M2GTipNtf) GetParas() []string {
	if x != nil {
		return x.Paras
	}
	return nil
}

type G2MSelectMasterInRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *RoomMember `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	Roomid uint64      `protobuf:"varint,2,opt,name=roomid,proto3" json:"roomid,omitempty"`
}

func (x *G2MSelectMasterInRoomReq) Reset() {
	*x = G2MSelectMasterInRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2MSelectMasterInRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2MSelectMasterInRoomReq) ProtoMessage() {}

func (x *G2MSelectMasterInRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2MSelectMasterInRoomReq.ProtoReflect.Descriptor instead.
func (*G2MSelectMasterInRoomReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{34}
}

func (x *G2MSelectMasterInRoomReq) GetMember() *RoomMember {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *G2MSelectMasterInRoomReq) GetRoomid() uint64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

type G2MLockMasterInRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roomid uint64 `protobuf:"varint,1,opt,name=roomid,proto3" json:"roomid,omitempty"`
}

func (x *G2MLockMasterInRoomReq) Reset() {
	*x = G2MLockMasterInRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2MLockMasterInRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2MLockMasterInRoomReq) ProtoMessage() {}

func (x *G2MLockMasterInRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2MLockMasterInRoomReq.ProtoReflect.Descriptor instead.
func (*G2MLockMasterInRoomReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{35}
}

func (x *G2MLockMasterInRoomReq) GetRoomid() uint64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

//game-scene
type Game2SceneLogicMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sceneid      uint64 `protobuf:"varint,1,opt,name=sceneid,proto3" json:"sceneid,omitempty"`
	Roleid       uint64 `protobuf:"varint,2,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Gameserverid uint64 `protobuf:"varint,3,opt,name=gameserverid,proto3" json:"gameserverid,omitempty"`
	Msgid        uint32 `protobuf:"varint,4,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Datas        []byte `protobuf:"bytes,5,opt,name=datas,proto3" json:"datas,omitempty"`
}

func (x *Game2SceneLogicMsg) Reset() {
	*x = Game2SceneLogicMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game2SceneLogicMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game2SceneLogicMsg) ProtoMessage() {}

func (x *Game2SceneLogicMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game2SceneLogicMsg.ProtoReflect.Descriptor instead.
func (*Game2SceneLogicMsg) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{36}
}

func (x *Game2SceneLogicMsg) GetSceneid() uint64 {
	if x != nil {
		return x.Sceneid
	}
	return 0
}

func (x *Game2SceneLogicMsg) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *Game2SceneLogicMsg) GetGameserverid() uint64 {
	if x != nil {
		return x.Gameserverid
	}
	return 0
}

func (x *Game2SceneLogicMsg) GetMsgid() uint32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *Game2SceneLogicMsg) GetDatas() []byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

type Scene2GameLogicMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sceneid uint64 `protobuf:"varint,1,opt,name=sceneid,proto3" json:"sceneid,omitempty"`
	Roleid  uint64 `protobuf:"varint,2,opt,name=roleid,proto3" json:"roleid,omitempty"`
	Msgid   uint32 `protobuf:"varint,3,opt,name=msgid,proto3" json:"msgid,omitempty"`
	Datas   []byte `protobuf:"bytes,4,opt,name=datas,proto3" json:"datas,omitempty"`
}

func (x *Scene2GameLogicMsg) Reset() {
	*x = Scene2GameLogicMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scene2GameLogicMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scene2GameLogicMsg) ProtoMessage() {}

func (x *Scene2GameLogicMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scene2GameLogicMsg.ProtoReflect.Descriptor instead.
func (*Scene2GameLogicMsg) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{37}
}

func (x *Scene2GameLogicMsg) GetSceneid() uint64 {
	if x != nil {
		return x.Sceneid
	}
	return 0
}

func (x *Scene2GameLogicMsg) GetRoleid() uint64 {
	if x != nil {
		return x.Roleid
	}
	return 0
}

func (x *Scene2GameLogicMsg) GetMsgid() uint32 {
	if x != nil {
		return x.Msgid
	}
	return 0
}

func (x *Scene2GameLogicMsg) GetDatas() []byte {
	if x != nil {
		return x.Datas
	}
	return nil
}

type G2SCreateSceneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roomid        uint64        `protobuf:"varint,1,opt,name=roomid,proto3" json:"roomid,omitempty"`
	Members       []*RoomMember `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	MatchServerid uint64        `protobuf:"varint,3,opt,name=match_serverid,json=matchServerid,proto3" json:"match_serverid,omitempty"`
	GameServerid  uint64        `protobuf:"varint,4,opt,name=game_serverid,json=gameServerid,proto3" json:"game_serverid,omitempty"`
}

func (x *G2SCreateSceneReq) Reset() {
	*x = G2SCreateSceneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *G2SCreateSceneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*G2SCreateSceneReq) ProtoMessage() {}

func (x *G2SCreateSceneReq) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use G2SCreateSceneReq.ProtoReflect.Descriptor instead.
func (*G2SCreateSceneReq) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{38}
}

func (x *G2SCreateSceneReq) GetRoomid() uint64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

func (x *G2SCreateSceneReq) GetMembers() []*RoomMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *G2SCreateSceneReq) GetMatchServerid() uint64 {
	if x != nil {
		return x.MatchServerid
	}
	return 0
}

func (x *G2SCreateSceneReq) GetGameServerid() uint64 {
	if x != nil {
		return x.GameServerid
	}
	return 0
}

type S2GCreateSceneRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roomid        uint64 `protobuf:"varint,1,opt,name=roomid,proto3" json:"roomid,omitempty"`
	MatchServerid uint64 `protobuf:"varint,2,opt,name=match_serverid,json=matchServerid,proto3" json:"match_serverid,omitempty"`
}

func (x *S2GCreateSceneRes) Reset() {
	*x = S2GCreateSceneRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2GCreateSceneRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2GCreateSceneRes) ProtoMessage() {}

func (x *S2GCreateSceneRes) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2GCreateSceneRes.ProtoReflect.Descriptor instead.
func (*S2GCreateSceneRes) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{39}
}

func (x *S2GCreateSceneRes) GetRoomid() uint64 {
	if x != nil {
		return x.Roomid
	}
	return 0
}

func (x *S2GCreateSceneRes) GetMatchServerid() uint64 {
	if x != nil {
		return x.MatchServerid
	}
	return 0
}

type S2GSceneOkNtf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sceneid       uint64 `protobuf:"varint,1,opt,name=sceneid,proto3" json:"sceneid,omitempty"`
	Mapid         uint32 `protobuf:"varint,2,opt,name=mapid,proto3" json:"mapid,omitempty"`
	Sceneserverid uint64 `protobuf:"varint,3,opt,name=sceneserverid,proto3" json:"sceneserverid,omitempty"`
}

func (x *S2GSceneOkNtf) Reset() {
	*x = S2GSceneOkNtf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ss_logic_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2GSceneOkNtf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2GSceneOkNtf) ProtoMessage() {}

func (x *S2GSceneOkNtf) ProtoReflect() protoreflect.Message {
	mi := &file_ss_logic_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2GSceneOkNtf.ProtoReflect.Descriptor instead.
func (*S2GSceneOkNtf) Descriptor() ([]byte, []int) {
	return file_ss_logic_proto_rawDescGZIP(), []int{40}
}

func (x *S2GSceneOkNtf) GetSceneid() uint64 {
	if x != nil {
		return x.Sceneid
	}
	return 0
}

func (x *S2GSceneOkNtf) GetMapid() uint32 {
	if x != nil {
		return x.Mapid
	}
	return 0
}

func (x *S2GSceneOkNtf) GetSceneserverid() uint64 {
	if x != nil {
		return x.Sceneserverid
	}
	return 0
}

var File_ss_logic_proto protoreflect.FileDescriptor

var file_ss_logic_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xfd, 0x01, 0x0a, 0x11, 0x67, 0x32, 0x67, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x11, 0x67, 0x32, 0x67, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x12, 0x67, 0x32, 0x67, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22,
	0x5a, 0x0a, 0x14, 0x63, 0x32, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x66, 0x65, 0x72, 0x5f, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x16, 0x73,
	0x32, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x11, 0x67, 0x61, 0x6d,
	0x65, 0x32, 0x64, 0x62, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d,
	0x73, 0x67, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x11, 0x64, 0x62, 0x32, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x73, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x22,
	0x86, 0x01, 0x0a, 0x18, 0x67, 0x32, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x18, 0x64, 0x32, 0x67, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x72, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x69, 0x74, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x69, 0x74, 0x66, 0x6c, 0x61, 0x67,
	0x12, 0x30, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x61,
	0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x22, 0x4a, 0x0a, 0x16, 0x67, 0x32, 0x64, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x09,
	0x72, 0x6f, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0x4c,
	0x0a, 0x16, 0x64, 0x32, 0x67, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd0, 0x01, 0x0a,
	0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x67, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x61, 0x67, 0x64, 0x61, 0x74, 0x61, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22,
	0xc4, 0x01, 0x0a, 0x16, 0x67, 0x32, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x72, 0x65, 0x73, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x72, 0x65, 0x73,
	0x66, 0x6c, 0x61, 0x67, 0x12, 0x30, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x52, 0x09, 0x72, 0x6f, 0x6c,
	0x65, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0xdc, 0x01, 0x0a, 0x16, 0x64, 0x32, 0x67, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x61, 0x76, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x13, 0x67, 0x32, 0x6d, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x13, 0x6d, 0x32, 0x67, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x12, 0x29, 0x0a,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x13, 0x67, 0x32, 0x6d,
	0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x72, 0x65, 0x71,
	0x12, 0x22, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x1b, 0x6d, 0x32, 0x67,
	0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x6f,
	0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x1b, 0x67, 0x32, 0x6d,
	0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x6f,
	0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x18, 0x6d, 0x32, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72,
	0x6f, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x39, 0x0a, 0x0c, 0x6d, 0x32, 0x67, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x74,
	0x66, 0x12, 0x29, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x68, 0x0a, 0x12,
	0x67, 0x32, 0x6d, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x72,
	0x65, 0x71, 0x12, 0x22, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x13, 0x67, 0x32, 0x6d, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x22, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x12, 0x67, 0x32, 0x6d,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x12,
	0x22, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x14, 0x6d,
	0x32, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f,
	0x72, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x77,
	0x61, 0x69, 0x74, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x8c,
	0x01, 0x0a, 0x14, 0x67, 0x32, 0x6d, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x61, 0x67, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x61, 0x67, 0x72, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x64, 0x22, 0x58, 0x0a,
	0x13, 0x6d, 0x32, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6e, 0x74, 0x66, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x22, 0x42, 0x0a, 0x15, 0x6d, 0x32, 0x67, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x74, 0x66,
	0x12, 0x29, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x14,
	0x6d, 0x32, 0x67, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x22, 0x29,
	0x0a, 0x0f, 0x6d, 0x32, 0x67, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6f, 0x6b, 0x5f, 0x6e, 0x74,
	0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x14, 0x67, 0x32, 0x6d,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x22, 0xba, 0x01, 0x0a, 0x14, 0x67, 0x61,
	0x6d, 0x65, 0x32, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6d,
	0x73, 0x67, 0x12, 0x22, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73,
	0x67, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x32, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x12,
	0x22, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22,
	0x41, 0x0a, 0x0b, 0x6d, 0x32, 0x67, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x6e, 0x74, 0x66, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x73, 0x22, 0x60, 0x0a, 0x1d, 0x67, 0x32, 0x6d, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x72, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x1b, 0x67, 0x32, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x72, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x14,
	0x67, 0x61, 0x6d, 0x65, 0x32, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x5f, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73,
	0x67, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0x74, 0x0a, 0x14, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x32,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6d, 0x73, 0x67, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x73, 0x22, 0xa5, 0x01, 0x0a,
	0x14, 0x67, 0x32, 0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x14, 0x73, 0x32, 0x67, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x10, 0x73,
	0x32, 0x67, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x6f, 0x6b, 0x5f, 0x6e, 0x74, 0x66, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x69, 0x64, 0x2a, 0x4b, 0x0a, 0x10, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x65, 0x78, 0x69, 0x74, 0x67, 0x61, 0x6d, 0x65,
	0x10, 0x02, 0x2a, 0x3b, 0x0a, 0x10, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x6f, 0x66, 0x66, 0x6c,
	0x69, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x10, 0x02, 0x42,
	0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ss_logic_proto_rawDescOnce sync.Once
	file_ss_logic_proto_rawDescData = file_ss_logic_proto_rawDesc
)

func file_ss_logic_proto_rawDescGZIP() []byte {
	file_ss_logic_proto_rawDescOnce.Do(func() {
		file_ss_logic_proto_rawDescData = protoimpl.X.CompressGZIP(file_ss_logic_proto_rawDescData)
	})
	return file_ss_logic_proto_rawDescData
}

var file_ss_logic_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ss_logic_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_ss_logic_proto_goTypes = []interface{}{
	(KickRoleReason)(0),              // 0: pb.kick_role_reason
	(RoleSaveReason)(0),              // 1: pb.role_save_reason
	(*G2GKickRoleReq)(nil),           // 2: pb.g2g_kick_role_req
	(*G2GKickRoleRes)(nil),           // 3: pb.g2g_kick_role_res
	(*G2GEnterGameReq)(nil),          // 4: pb.g2g_enter_game_req
	(*C2STranferGameMsg)(nil),        // 5: pb.c2s_tranfer_game_msg
	(*S2CTranferClientMsg)(nil),      // 6: pb.s2c_tranfer_client_msg
	(*Game2DbLogicMsg)(nil),          // 7: pb.game2db_logic_msg
	(*Db2GameLogicMsg)(nil),          // 8: pb.db2game_logic_msg
	(*G2DSelectRoleDataReq)(nil),     // 9: pb.g2d_select_role_data_req
	(*D2GSelectRoleDataRes)(nil),     // 10: pb.d2g_select_role_data_res
	(*G2DInitRoleDataReq)(nil),       // 11: pb.g2d_init_role_data_req
	(*D2GInitRoleDataRes)(nil),       // 12: pb.d2g_init_role_data_res
	(*RoleSaveData)(nil),             // 13: pb.role_save_data
	(*G2DRoleDataSaveReq)(nil),       // 14: pb.g2d_role_data_save_req
	(*D2GRoleDataSaveRes)(nil),       // 15: pb.d2g_role_data_save_res
	(*G2MCreateTeamReq)(nil),         // 16: pb.g2m_create_team_req
	(*M2GCreateTeamRes)(nil),         // 17: pb.m2g_create_team_res
	(*G2MInviteTeamReq)(nil),         // 18: pb.g2m_invite_team_req
	(*M2GInviteTeamConfirmReq)(nil),  // 19: pb.m2g_invite_team_confirm_req
	(*G2MInviteTeamConfirmRes)(nil),  // 20: pb.g2m_invite_team_confirm_res
	(*M2GInviteTeamFailRes)(nil),     // 21: pb.m2g_invite_team_fail_res
	(*M2GTeamNtf)(nil),               // 22: pb.m2g_team_ntf
	(*G2MLeaveTeamReq)(nil),          // 23: pb.g2m_leave_team_req
	(*G2MStartMatchReq)(nil),         // 24: pb.g2m_start_match_req
	(*G2MStopMatchReq)(nil),          // 25: pb.g2m_stop_match_req
	(*M2GRoomConfirmReq)(nil),        // 26: pb.m2g_room_confirm_req
	(*G2MRoomConfirmRes)(nil),        // 27: pb.g2m_room_confirm_res
	(*M2GRoomMemberNtf)(nil),         // 28: pb.m2g_room_member_ntf
	(*M2GRestartMatchNtf)(nil),       // 29: pb.m2g_restart_match_ntf
	(*M2GCreateSceneReq)(nil),        // 30: pb.m2g_create_scene_req
	(*M2GRoomOkNtf)(nil),             // 31: pb.m2g_room_ok_ntf
	(*G2MCreateSceneRes)(nil),        // 32: pb.g2m_create_scene_res
	(*Game2MatchLogicMsg)(nil),       // 33: pb.game2match_logic_msg
	(*Match2GameLogicMsg)(nil),       // 34: pb.match2game_logic_msg
	(*M2GTipNtf)(nil),                // 35: pb.m2g_tip_ntf
	(*G2MSelectMasterInRoomReq)(nil), // 36: pb.g2m_select_master_in_room_req
	(*G2MLockMasterInRoomReq)(nil),   // 37: pb.g2m_lock_master_in_room_req
	(*Game2SceneLogicMsg)(nil),       // 38: pb.game2scene_logic_msg
	(*Scene2GameLogicMsg)(nil),       // 39: pb.scene2game_logic_msg
	(*G2SCreateSceneReq)(nil),        // 40: pb.g2s_create_scene_req
	(*S2GCreateSceneRes)(nil),        // 41: pb.s2g_create_scene_res
	(*S2GSceneOkNtf)(nil),            // 42: pb.s2g_scene_ok_ntf
	(MatchMode)(0),                   // 43: pb.match_mode
	(*TeamInfo)(nil),                 // 44: pb.team_info
	(*RoomMember)(nil),               // 45: pb.room_member
}
var file_ss_logic_proto_depIdxs = []int32{
	0,  // 0: pb.g2g_kick_role_req.reason:type_name -> pb.kick_role_reason
	13, // 1: pb.d2g_select_role_data_res.roledatas:type_name -> pb.role_save_data
	13, // 2: pb.g2d_init_role_data_req.roledatas:type_name -> pb.role_save_data
	1,  // 3: pb.g2d_role_data_save_req.reason:type_name -> pb.role_save_reason
	13, // 4: pb.g2d_role_data_save_req.roledatas:type_name -> pb.role_save_data
	1,  // 5: pb.d2g_role_data_save_res.reason:type_name -> pb.role_save_reason
	43, // 6: pb.g2m_create_team_req.mode:type_name -> pb.match_mode
	44, // 7: pb.m2g_create_team_res.teaminfo:type_name -> pb.team_info
	43, // 8: pb.g2m_invite_team_req.mode:type_name -> pb.match_mode
	43, // 9: pb.m2g_invite_team_confirm_req.mode:type_name -> pb.match_mode
	43, // 10: pb.g2m_invite_team_confirm_res.mode:type_name -> pb.match_mode
	43, // 11: pb.m2g_invite_team_fail_res.mode:type_name -> pb.match_mode
	44, // 12: pb.m2g_team_ntf.teaminfo:type_name -> pb.team_info
	43, // 13: pb.g2m_leave_team_req.mode:type_name -> pb.match_mode
	43, // 14: pb.g2m_start_match_req.mode:type_name -> pb.match_mode
	43, // 15: pb.g2m_stop_match_req.mode:type_name -> pb.match_mode
	45, // 16: pb.m2g_room_confirm_req.waitmembers:type_name -> pb.room_member
	45, // 17: pb.m2g_room_member_ntf.members:type_name -> pb.room_member
	44, // 18: pb.m2g_restart_match_ntf.teaminfo:type_name -> pb.team_info
	45, // 19: pb.m2g_create_scene_req.members:type_name -> pb.room_member
	43, // 20: pb.game2match_logic_msg.mode:type_name -> pb.match_mode
	43, // 21: pb.match2game_logic_msg.mode:type_name -> pb.match_mode
	45, // 22: pb.g2m_select_master_in_room_req.member:type_name -> pb.room_member
	45, // 23: pb.g2s_create_scene_req.members:type_name -> pb.room_member
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_ss_logic_proto_init() }
func file_ss_logic_proto_init() {
	if File_ss_logic_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ss_logic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2GKickRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2GKickRoleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2GEnterGameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2STranferGameMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2CTranferClientMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game2DbLogicMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Db2GameLogicMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2DSelectRoleDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*D2GSelectRoleDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2DInitRoleDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*D2GInitRoleDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSaveData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2DRoleDataSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*D2GRoleDataSaveRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2MCreateTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M2GCreateTeamRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2MInviteTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M2GInviteTeamConfirmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2MInviteTeamConfirmRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M2GInviteTeamFailRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M2GTeamNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2MLeaveTeamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2MStartMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2MStopMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M2GRoomConfirmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2MRoomConfirmRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M2GRoomMemberNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M2GRestartMatchNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M2GCreateSceneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M2GRoomOkNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2MCreateSceneRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game2MatchLogicMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match2GameLogicMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M2GTipNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2MSelectMasterInRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2MLockMasterInRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game2SceneLogicMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scene2GameLogicMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*G2SCreateSceneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2GCreateSceneRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ss_logic_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2GSceneOkNtf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ss_logic_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ss_logic_proto_goTypes,
		DependencyIndexes: file_ss_logic_proto_depIdxs,
		EnumInfos:         file_ss_logic_proto_enumTypes,
		MessageInfos:      file_ss_logic_proto_msgTypes,
	}.Build()
	File_ss_logic_proto = out.File
	file_ss_logic_proto_rawDesc = nil
	file_ss_logic_proto_goTypes = nil
	file_ss_logic_proto_depIdxs = nil
}
